{"version":3,"sources":["redux/action-creators/index.js","redux/reducers/index.js","redux/store.js","redux/index.js","components/Home.jsx","components/NavBar.jsx","api/rails.js","components/Signup.jsx","components/App.jsx","index.js"],"names":["actionCreators","reducers","combineReducers","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","redux","store","createStore","reducer","applyMiddleware","reduxThunk","Home","NavBar","to","a","url","data","fetch","method","mode","cache","credentials","headers","redirect","referrerPolicy","body","JSON","stringify","response","json","rails","baseUrl","get","post","console","log","postData","this","Signup","useState","username","setUsername","email","setEmail","password","setPassword","passwordConfirmation","setPasswordConfirmation","onSubmit","e","preventDefault","user","password_confirmation","htmlFor","value","onChange","target","type","App","path","element","ReactDOM","render","document","getElementById"],"mappings":"oMAEeA,EAFQ,G,eCIRC,EAFEC,YAAgB,ICE3BC,EAAmBC,OAAOC,sCAAwCC,ICGzDC,EAJD,CACZP,iBAAgBQ,MDEJC,YACZC,EACAP,EAAiBQ,YAAgBC,Q,sBEFpBC,EANF,kBACX,uCCOaC,EANA,kBACb,8BACE,cAAC,IAAD,CAAMC,GAAG,UAAT,wB,0ECJJ,4CAAAC,EAAA,6DAAwBC,EAAxB,+BAA8B,GAAIC,EAAlC,+BAAyC,GAAzC,SACyBC,MAAMF,EAAK,CAChCG,OAAQ,OACRC,KAAM,OACNC,MAAO,WACPC,YAAa,UACbC,QAAS,CACP,eAAgB,oBAElBC,SAAU,SACVC,eAAgB,cAChBC,KAAMC,KAAKC,UAAUX,KAXzB,cACQY,EADR,yBAaSA,EAASC,QAblB,4C,sBAgBA,IAaeC,EAbD,CACZC,QAAS,wBACHC,IAFM,SAEFjB,GAAM,IAAD,iIACPa,EAAWX,MAAM,EAAKc,QAAUhB,GAChCC,EAAOY,EAASC,OAFT,kBAGNb,GAHM,8CAKfiB,KAPY,SAOPlB,EAAKC,GAER,OADAkB,QAAQC,IAAI,cAAenB,G,0CACpBoB,CAASC,KAAKN,QAAUhB,EAAKC,KCoCzBsB,EA1DA,WACb,MAAgCC,mBAAS,WAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAA0BF,mBAAS,8BAAnC,mBAAOG,EAAP,KAAcC,EAAd,KACA,EAAgCJ,mBAAS,YAAzC,mBAAOK,EAAP,KAAiBC,EAAjB,KACA,EAAwDN,mBAAS,YAAjE,mBAAOO,EAAP,KAA6BC,EAA7B,KAEMC,EAAQ,uCAAG,WAAOC,GAAP,iBAAAnC,EAAA,6DACfmC,EAAEC,iBADa,SAEQpB,EAAMG,KAAK,eAAgB,CAChDkB,KAAM,CACJX,WACAE,QACAE,WACAQ,sBAAuBN,IAExB,IATY,gBAEP9B,EAFO,EAEPA,KAkBRkB,QAAQC,IAAInB,GApBG,2CAAH,sDA0Bd,OACE,uBAAMgC,SAAUA,EAAhB,UACE,wBAAOK,QAAQ,WAAf,2BAEE,uBAAOC,MAAOd,EAAUe,SAAU,SAACN,GAAD,OAAOR,EAAYQ,EAAEO,OAAOF,aAEhE,wBAAOD,QAAQ,WAAf,wBAEE,uBAAOC,MAAOZ,EAAOa,SAAU,SAACN,GAAD,OAAON,EAASM,EAAEO,OAAOF,aAE1D,wBAAOD,QAAQ,WAAf,2BAEE,uBAAOC,MAAOV,EAAUW,SAAU,SAACN,GAAD,OAAOJ,EAAYI,EAAEO,OAAOF,aAEhE,wBAAOD,QAAQ,WAAf,6BAEE,uBACEC,MAAOR,EACPS,SAAU,SAACN,GAAD,OAAOF,EAAwBE,EAAEO,OAAOF,aAGtD,uBAAOG,KAAK,SAASH,MAAM,eCzClBI,EAVH,kBACV,eAAC,IAAD,WACE,cAAC,EAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,IAAIC,QAAS,cAAC,EAAD,MACzB,cAAC,IAAD,CAAOD,KAAK,UAAUC,QAAS,cAAC,EAAD,a,MCHrCC,IAASC,OACP,cAAC,IAAD,CAAUxD,MAAOD,EAAMC,MAAvB,SACE,cAAC,EAAD,MAEFyD,SAASC,eAAe,W","file":"static/js/main.6dab6a0b.chunk.js","sourcesContent":["const actionCreators = {};\n\nexport default actionCreators;\n","import { combineReducers } from 'redux';\n\nconst reducers = combineReducers({});\n\nexport default reducers;\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport reduxThunk from 'redux-thunk';\nimport reducer from './reducers';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(\n  reducer,\n  composeEnhancers(applyMiddleware(reduxThunk)),\n);\n\nexport default store;\n","import actionCreators from './action-creators';\nimport store from './store';\n\nconst redux = {\n  actionCreators, store,\n};\n\nexport default redux;\n","const Home = () => (\n  <h1>\n    Home\n  </h1>\n);\n\nexport default Home;\n","import { Link } from 'react-router-dom';\n\nconst NavBar = () => (\n  <div>\n    <Link to=\"/signup\">Sign up</Link>\n  </div>\n);\n\nexport default NavBar;\n","async function postData(url = '', data = {}) {\n  const response = await fetch(url, {\n    method: 'POST', // *GET, POST, PUT, DELETE, etc.\n    mode: 'cors',\n    cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\n    credentials: 'include',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    redirect: 'follow',\n    referrerPolicy: 'no-referrer', // no-referrer, *no-referrer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url\n    body: JSON.stringify(data), // body data type must match \"Content-Type\" header\n  });\n  return response.json(); // parses JSON response into native JavaScript objects\n}\n\nconst rails = {\n  baseUrl: 'http://localhost:8000',\n  async get(url) {\n    const response = fetch(this.baseUrl + url);\n    const data = response.json();\n    return data;\n  },\n  post(url, data) {\n    console.log('I am called', data);\n    return postData(this.baseUrl + url, data);\n  },\n};\n\nexport default rails;\n","import { useState } from 'react';\nimport rails from '../api/rails';\n\nconst Signup = () => {\n  const [username, setUsername] = useState('Samrood');\n  const [email, setEmail] = useState('samrood@gmailexample22.com');\n  const [password, setPassword] = useState('password');\n  const [passwordConfirmation, setPasswordConfirmation] = useState('password');\n\n  const onSubmit = async (e) => {\n    e.preventDefault();\n    const { data } = await rails.post('/auth/signup', {\n      user: {\n        username,\n        email,\n        password,\n        password_confirmation: passwordConfirmation,\n      },\n    }, {\n    });\n\n    // const { data } = await rails.post('/auth/signin', {\n    //   auth: {\n    //     email,\n    //     password,\n    //   },\n    // }, {\n    // });\n\n    console.log(data);\n    // const response = await fetch('http://localhost:8000/users'); console.log(await response.json());\n\n    // const { data } = await rails.get('/users');\n  };\n\n  return (\n    <form onSubmit={onSubmit}>\n      <label htmlFor=\"username\">\n        Enter Username\n        <input value={username} onChange={(e) => setUsername(e.target.value)} />\n      </label>\n      <label htmlFor=\"username\">\n        Enter email\n        <input value={email} onChange={(e) => setEmail(e.target.value)} />\n      </label>\n      <label htmlFor=\"username\">\n        Enter password\n        <input value={password} onChange={(e) => setPassword(e.target.value)} />\n      </label>\n      <label htmlFor=\"username\">\n        Confirm password\n        <input\n          value={passwordConfirmation}\n          onChange={(e) => setPasswordConfirmation(e.target.value)}\n        />\n      </label>\n      <input type=\"submit\" value=\"Submit\" />\n    </form>\n  );\n};\n\nexport default Signup;\n","import { BrowserRouter, Route, Routes } from 'react-router-dom';\nimport Home from './Home';\nimport NavBar from './NavBar';\nimport Signup from './Signup';\n\nconst App = () => (\n  <BrowserRouter>\n    <NavBar />\n    <Routes>\n      <Route path=\"/\" element={<Home />} />\n      <Route path=\"/signup\" element={<Signup />} />\n    </Routes>\n  </BrowserRouter>\n);\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport React from 'react';\nimport { Provider } from 'react-redux';\nimport redux from './redux';\nimport App from './components/App';\nimport './style.css';\n\nReactDOM.render(\n  <Provider store={redux.store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}